{"ast":null,"code":"var _jsxFileName = \"C:\\\\assingnment\\\\frontend\\\\application\\\\src\\\\components\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\n// src/FileUpload.js\nimport React, { useState } from \"react\";\n//import './FileUpload.css';\nimport axios from \"axios\";\nimport { createRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [results, setResults] = useState(null);\n  const fileInput = /*#__PURE__*/createRef();\n  const onUpload = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.set(\"avatar\", fileInput.current.files[0]);\n    try {\n      const responce = await fetch(\"/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      console.log(\"nice\");\n      const data = await responce.json();\n      console.log(data);\n      if (data.message === \"ok\") {\n        setResults(data.message);\n        //alert(\"file uploaded successfully\");\n      } else {\n        setResults(data.message);\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"avatar\",\n        ref: fileInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        value: \"Upload\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), results && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"od68SXgl0HKV0v/NdBL6JtLUk7Y=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","createRef","jsxDEV","_jsxDEV","FileUpload","_s","results","setResults","fileInput","onUpload","event","preventDefault","formData","FormData","set","current","files","responce","fetch","method","body","console","log","data","json","message","error","children","onSubmit","type","name","ref","fileName","_jsxFileName","lineNumber","columnNumber","value","_c","$RefreshReg$"],"sources":["C:/assingnment/frontend/application/src/components/FileUpload.jsx"],"sourcesContent":["// src/FileUpload.js\r\nimport React, { useState } from \"react\";\r\n//import './FileUpload.css';\r\nimport axios from \"axios\";\r\nimport { createRef } from \"react\";\r\n\r\nconst FileUpload = () => {\r\n    const [results, setResults] = useState(null);\r\n  const fileInput = createRef();\r\n  const onUpload = async (event) => {\r\n\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    formData.set(\"avatar\", fileInput.current.files[0]);\r\n    try {\r\n      const responce = await fetch(\"/upload\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      console.log(\"nice\");\r\n      const data = await responce.json();\r\n      console.log(data);\r\n      if(data.message === \"ok\"){\r\n        setResults(data.message);\r\n        //alert(\"file uploaded successfully\");\r\n      }else{\r\n        setResults(data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onUpload}>\r\n        <input type=\"file\" name=\"avatar\" ref={fileInput} />\r\n        <button type=\"submit\" value=\"Upload\">\r\n          Upload\r\n        </button>\r\n        {results && <h2>{results}</h2>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMS,SAAS,gBAAGP,SAAS,CAAC,CAAC;EAC7B,MAAMQ,QAAQ,GAAG,MAAOC,KAAK,IAAK;IAEhCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,GAAG,CAAC,QAAQ,EAAEN,SAAS,CAACO,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAS,EAAE;QACtCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAER;MACR,CAAC,CAAC;MACFS,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnB,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCH,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;MACjB,IAAGA,IAAI,CAACE,OAAO,KAAK,IAAI,EAAC;QACvBlB,UAAU,CAACgB,IAAI,CAACE,OAAO,CAAC;QACxB;MACF,CAAC,MAAI;QACHlB,UAAU,CAACgB,IAAI,CAACE,OAAO,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAACD,OAAO,CAAC;IAC5B;EACF,CAAC;EAED,oBACEtB,OAAA;IAAAwB,QAAA,eACExB,OAAA;MAAMyB,QAAQ,EAAEnB,QAAS;MAAAkB,QAAA,gBACvBxB,OAAA;QAAO0B,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,GAAG,EAAEvB;MAAU;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnDhC,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAACO,KAAK,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAErC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR7B,OAAO,iBAAIH,OAAA;QAAAwB,QAAA,EAAKrB;MAAO;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAtCID,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}